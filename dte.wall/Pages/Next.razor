@page "/next"
@inject Edition2023Service Service
@inject NavigationManager NavManager

<PageTitle>dTE - Up next</PageTitle>

@if (CurrentSessions.Any())
{
    <div class="row py-3">
        <div class="col">
            <h2>Now</h2>
        </div>
    </div>
    <Sessions Collection="CurrentSessions" Date="GetReferenceDateTime()"></Sessions>
}

@if (NextSessions.Any())
{
    <div class="row py-5">
        <div class="coll">
            <h2>Next</h2>
        </div>
    </div>

    <Sessions Collection="NextSessions" Date="GetReferenceDateTime()"></Sessions>
}

@code {
    public ConferenceData? ConferenceData { get; set; }
    public IEnumerable<Summary> NextSessions { get; set; } = Enumerable.Empty<Summary>();
    public IEnumerable<Summary> CurrentSessions { get; set; } = Enumerable.Empty<Summary>();

    private Timer? _timer;

    protected override async Task OnInitializedAsync()
    {
        ConferenceData = await Service.GetConferenceDataAsync();

        _timer = new System.Threading.Timer(async _ =>  // async void
        {
            DetermineSessions();
            await InvokeAsync(StateHasChanged);
        }, null, 0, 10000);
    }

    public DateTimeOffset GetReferenceDateTime()
    {
        var time = NavManager.QueryString("time");
        return TimeHelpers.GetOffsetByTime(time);
    }

    public void DetermineSessions()
    {
        if (ConferenceData == null)
        {
            return;
        }

        var time = GetReferenceDateTime();

        NextSessions = ConferenceData.Sessions
            .Where(s => s.GetStartOffset() > time && s.GetStartOffset() <= time.AddMinutes(30))
            .Select(s => Summary.FromSession(s, ConferenceData))
            .OrderBy(s => s.RoomSort);

        CurrentSessions = ConferenceData.Sessions
            .Where(s => s.GetStartOffset() <= time && s.GetEndOffset() > time.AddMinutes(5)) // We exclude the last 5 minutes, focussing on the next
            .Select(s => Summary.FromSession(s, ConferenceData))
            .OrderBy(s => s.RoomSort);

        if (!CurrentSessions.Any() && !NextSessions.Any())
        {
            NextSessions = new[] { Summary.FromSession(
                ConferenceData.Sessions.OrderBy(s => s.StartsAt).First(),
                ConferenceData)};
        }
    }
}
