@if (Session != null)
{
    <div class="card bg-white text-dark p-2">
    <div class="card-body">
        <div class="badge bg-secondary text-white">@Session.Room</div>
        <h3 class="card-title my-3">@Session.Title</h3>

        @if (Session.Speakers.Any())
            {
                <h6 class="card-subtitle text-muted mb-3">
                    @foreach (var speaker in Session.Speakers)
                    {
                        @if (!string.IsNullOrEmpty(speaker.ProfilePicture))
                        {
                            <div class="d-flex align-items-center pb-2">
                                <img src="@speaker.ProfilePicture" width="50px" class="rounded-circle" />
                                <span class="px-3">@speaker.Name - @speaker.Title</span>
                            </div>
                        }
                        else
                        {
                            <span>@speaker.Name - @speaker.Title</span>
                        }
                    }
                </h6>
            }

            @if (TimeLeft(Session) > 5)
            {
                <p class="card-text">@Session.Description</p>
            }
            <p class="card-text">
                @foreach (var tag in Session.Tags)
                {
                    <span class="badge bg-danger rounded-pill me-2">@tag</span>
                }
            </p>

            @if (Session.GetStartOffset() > GetReferenceDateTime())
            {
                <p class="card-text"><small class="text-muted">Start <WorldTime TimeCET="Session.Start"></WorldTime></small></p>
            }
            else
            {
                <p class="card-text"><small class="text-muted">Ends in @TimeLeft(Session) minutes.</small></p>
            }

        </div>
    </div>
}

@code {
    [Parameter]
    public Summary Session { get; set; }

    [Parameter]
    public DateTimeOffset? Date { get; set; }

    public double TimeLeft(Summary summary)
    {
        return Math.Floor(summary.GetEndOffset().Subtract(GetReferenceDateTime()).TotalMinutes);
    }

    public DateTimeOffset GetReferenceDateTime()
    {
        return Date ?? DateTimeOffset.Now;
    }
}